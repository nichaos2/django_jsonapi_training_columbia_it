# First try with tox ; clean later
[tox]
envlist =
    py38;-django32
; tox_pip_extensions_ext_venv_update = True
isolated_build = True
skipsdist= True

#TODO add coverage, black, safety, bandit if useful
[testenv]
deps =
    # project dependencies
    # poetry export --without-hashes --format=requirements.txt > requirements.txt
    -rrequirements.txt
    # these exist in the dev part of the .toml file
    pytest
    pytest-django
    model-bakery
    # tutorial
    ; flake8
    ; coverage
    ; isort
    ; bandit
    ; safety

setenv =
    DJANGO_SETTINGS_MODULE = training.settings
commands =
    pytest -vv
    # tutorial
    ; flake8 --exclude **/migrations myapp
    ; isort -vb -df -c --recursive --skip migrations myapp
    ; python manage.py check
    ; bandit --recursive myapp
    ; safety check --full-report
    ; coverage erase
    ; coverage run --source='{toxinidir}/myapp' manage.py test
    ; coverage html

#TODO: explore what this is doing
[testenv:devenv]
envdir = env
basepython = python3.8
usedevelop = True

; deps =
;     -rrequirements.txt
; commands =
;     /usr/bin/printf '\n\033[0;31m  dont forget to source env/bin/activate\033[0m\n'

; [flake8]
; max-line-length = 120
; exclude = docs/, myapp/migrations/, .tox/, env/
; application-import-names = myapp
; builtins = __class__

; [isort]
; known_first_party = myapp